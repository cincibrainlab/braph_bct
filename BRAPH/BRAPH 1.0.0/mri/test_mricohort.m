% File to test the use of MRICohort.
%
% See also MRICohort.

% Author: Mite Mijalkov, Ehsan Kakaei & Giovanni Volpe
% Date: 2016/01/01

close all
clear all
clc

%% Create BrainAtlas from BrainRegion list

br1 = BrainRegion(BrainRegion.LABEL,'REG. 1', ...
    BrainRegion.NAME,'Brain Region 1', ...
    BrainRegion.X,1, ...
    BrainRegion.Y,1, ...
    BrainRegion.Z,1, ...
    BrainRegion.HS,BrainRegion.HS_LEFT, ...
    BrainRegion.NOTES,'notes1 ...');

br2 = BrainRegion(BrainRegion.LABEL,'REG. 2', ...
    BrainRegion.NAME,'Brain Region 2', ...
    BrainRegion.X,2, ...
    BrainRegion.Y,-2, ...
    BrainRegion.Z,2, ...
    BrainRegion.HS,BrainRegion.HS_RIGHT, ...
    BrainRegion.NOTES,'notes2 ...');

br3 = BrainRegion(BrainRegion.LABEL,'REG. 3', ...
    BrainRegion.NAME,'Brain Region 3', ...
    BrainRegion.X,3, ...
    BrainRegion.Y,3, ...
    BrainRegion.Z,-3, ...
    BrainRegion.HS,BrainRegion.HS_LEFT, ...
    BrainRegion.NOTES,'notes3 ...');

br4 = BrainRegion(BrainRegion.LABEL,'REG. 4', ...
    BrainRegion.NAME,'Brain Region 4', ...
    BrainRegion.X,-4, ...
    BrainRegion.Y,4, ...
    BrainRegion.Z,4, ...
    BrainRegion.HS,BrainRegion.HS_RIGHT, ...
    BrainRegion.NOTES,'notes4 ...');

br5 = BrainRegion(BrainRegion.LABEL,'REG. 5', ...
    BrainRegion.NAME,'Brain Region 5', ...
    BrainRegion.X,-5, ...
    BrainRegion.Y,-5, ...
    BrainRegion.Z,5, ...
    BrainRegion.HS,BrainRegion.HS_LEFT, ...
    BrainRegion.NOTES,'notes5 ...');

brs = {br1 br2 br3 br4 br5};
atlas = BrainAtlas(brs,BrainAtlas.NAME,'Atlas1');

%% create subjects

sub1 = MRISubject( ...
    MRISubject.CODE,'SUB1', ...
    MRISubject.AGE,71, ...
    MRISubject.GENDER,MRISubject.GENDER_FEMALE, ...
    MRISubject.DATA,rand(1,atlas.length()), ...
    MRISubject.NOTES,'none 1');
sub2 = MRISubject( ...
    MRISubject.CODE,'SUB2', ...
    MRISubject.AGE,72, ...
    MRISubject.GENDER,MRISubject.GENDER_MALE, ...
    MRISubject.DATA,rand(1,atlas.length()), ...
    MRISubject.NOTES,'none 2');

sub3 = MRISubject( ...
    MRISubject.CODE,'SUB3', ...
    MRISubject.AGE,73, ...
    MRISubject.GENDER,MRISubject.GENDER_FEMALE, ...
    MRISubject.DATA,rand(1,atlas.length()), ...
    MRISubject.NOTES,'none 3');
 
sub = {sub3 sub2 sub1};
 
%% create cohort
 
cohort = MRICohort(atlas,sub,MRICohort.NAME,'Cohort Trial');

%% get 
[el,groups] = cohort.get(1);  % get the properties of the group at position 1

%% addgroup, getGroup, getGroupData, groupnumber, checkgroup

g1 = Group(Group.NAME,'gr1',Group.DATA,[1 0 0],Group.NOTES,'notes gr 1');
g2 = Group(Group.NAME,'gr2',Group.DATA,[1 0 1],Group.NOTES,'notes gr 2');
cohort.addgroup(g2)  % add group g2 to cohort
cohort.checkgroup(g1)  % check validity of group g1 
cohort.addgroup(g1,1)  % add group g1 at position 1 to cohort

n = cohort.groupnumber;  % return the number of groups in cohort
gr = cohort.getGroup(2);  % get the properties of group at position 2
groupdata = cohort.getGroupData(1);  % get the data of group at position 1

%% add, invert

sub4 = MRISubject( ...
    MRISubject.CODE,'SUB4', ...
    MRISubject.AGE,74, ...
    MRISubject.GENDER,MRISubject.GENDER_FEMALE, ...
    MRISubject.DATA,rand(1,atlas.length()), ...
    MRISubject.NOTES,'none 4');
 
cohort.add(sub4,3,[1 2]) % add sub4 to groups 1 and 2 at position 3
cohort.invert(1,3)

%% addgroup, movegroupsup, movegroups2bottom

g3 = Group(Group.NAME,'gr3',Group.DATA,[1 0 0 1],Group.NOTES,'notes gr 3');
cohort.addgroup(g3) % adds group g3
selected = cohort.movegroupsup([2 3]);  % moves groups 2 and 3 one place up
selected = cohort.movegroups2bottom(1);  % moves group 1 to bottom
 
%% replacegroup, addtogroup
 
g4 = Group(Group.NAME,'gr4',Group.DATA,[1 0 0 0],Group.NOTES,'notes gr 4'); 
cohort.replacegroup(1,g4);  % replace group at position 1 with g4
cohort.addtogroup(2,[2 4])  % add participation of subject 2 to groups 2 and 4

%% notgroup, andgroup
 
cohort.notgroup(1,'comp. gr2')  % complementary of group g2
cohort.andgroup(2,4,'inter. 2 and 4')  % intersection (AND) of groups 2 and 4

%% toXML, fromXML   

% save cohort to XML file
Document = com.mathworks.xml.XMLUtils.createDocument('xml');
RootNode = Document.getDocumentElement;
Node = cohort.toXML(Document,RootNode);
cohort_xml = xmlwrite(Document);

% load cohort from XML file
% cohort_loadxml = MRICohort(atlas_1);
% cohort_loadxml.fromXML(Node)
%% elementClass, element

class = cohort.elementClass()
sub = cohort.element()

%% getSubjectData, mean, std, comparison
data = cohort.getSubjectData(2)
mean = cohort.mean(1);
std = cohort.std(2);
[dm,p_single,p_double,m1,m2,s1,s2,all1,all2,dall] = cohort.comparison(1,2);

%% extract
scohort = cohort.extract([3 5],[1 2])